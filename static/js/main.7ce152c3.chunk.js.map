{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","type","placeholder","onChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAG,kBAAaL,EAAMG,QAAQC,MAC3G,mCAAOJ,EAAMG,QAAQG,KAArB,OACA,4BAAIN,EAAMG,QAAQI,YCFZC,G,MAAW,SAACR,GAErB,OAAO,qBAAKC,UAAW,YAAhB,SAEFD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQC,WCsClBO,G,8DAzCb,aAAc,IAAD,8BACX,gBAaFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACZT,SAAU,GACVM,YAAa,IAJH,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACL,SAAUc,S,oBAM1C,WAAU,IAAD,EAC2BC,KAAKN,MAA/BT,EADD,EACCA,SAAUM,EADX,EACWA,YACZU,EAAmBhB,EAASiB,QAChC,SAAAvB,GAAO,OAAIA,EAAQG,KAAKqB,cAAcC,SAASb,EAAYY,kBAG7D,OACE,sBAAK1B,UAAU,MAAf,UACE,kDACA,uBACAA,UAAW,SACX4B,KAAK,SACLC,YAAY,kBACZC,SAAYP,KAAKZ,eACjB,cAAC,EAAD,CAAUH,SAAWgB,W,GAjCXO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7ce152c3.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nimport './card.styles.css';\r\nexport const Card = props=> (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={`Monster ${props.monster.id}`} />\r\n       <h2> { props.monster.name } </h2>  \r\n       <p>{props.monster.email}</p>\r\n    </div>\r\n);\r\n    ","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\n\r\nexport const CardList = (props) => {\r\n    \r\n    return <div className =\"card-list\">\r\n         {\r\n         props.monsters.map(monster =>(\r\n             <Card key ={monster.id} monster={monster} />  \r\n          ))\r\n        }\r\n    </div>\r\n};","import React, {Component} from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n     monsters: [],\n     searchField: ''\n    }\n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));   \n  }   \n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render (){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n\n    return (\n      <div className=\"App\">\n        <h1> Monster Rolodex</h1>\n        <input \n        className ='search'\n        type='search'\n        placeholder='search monsters'\n        onChange = {this.handleChange} />\n        <CardList monsters ={filteredMonsters} /> \n       \n        \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}